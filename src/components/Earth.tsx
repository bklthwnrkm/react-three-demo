/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 earth.gltf --types
Author: PatelDev (https://sketchfab.com/PatelDev)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/earth-f7a76c63ff1846afb2d606e5c8369c15
Title: Earth
*/

import * as THREE from "three";
import { /* useRef,  */ useState } from "react";
import { OrbitControls, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
// import { useSpring, animated } from "@react-spring/three";

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
  };
  materials: {
    ["Scene_-_Root"]: THREE.MeshStandardMaterial;
  };
};

export default function Earth(props: JSX.IntrinsicElements["group"]) {
  // const group = useRef<THREE.Group>();
  const [isZoom, setIsZoom] = useState(false);
  const { nodes, materials } = useGLTF(
    "/models/earth/earth.gltf"
  ) as GLTFResult;

  // const { scale } = useSpring({ scale: isZoom ? 4 : 2 });

  return (
    <>
      <OrbitControls
        /* maxZoom={1.5} minZoom={0.8} */ maxDistance={500}
        minDistance={8}
      />
      <group
        {...props}
        scale={isZoom ? 1.5 : 1.8}
        dispose={null}
        onClick={() => {
          setIsZoom((zoom) => !zoom);
        }}
        castShadow
        receiveShadow
      >
        <mesh
          geometry={nodes.Object_4.geometry}
          material={materials["Scene_-_Root"]}
          scale={1.5}
        />
      </group>
    </>
  );
}

useGLTF.preload("/earth.gltf");
